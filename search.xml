<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows 本地搭建部署 Hexo：从入坑到毕业</title>
      <link href="/2025/07/10/Windows-%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E9%83%A8%E7%BD%B2-Hexo%EF%BC%9A%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E6%AF%95%E4%B8%9A/"/>
      <url>/2025/07/10/Windows-%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E9%83%A8%E7%BD%B2-Hexo%EF%BC%9A%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E6%AF%95%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p><strong>技术栈</strong>：Hexo | Node.js | Git | GitHub Pages | Vercel | netlify<br>​<strong>适合对象</strong>​：新手友好，逐步详解</p><hr><h3 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a><strong>一、环境搭建</strong></h3><h4 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a><strong>1. 安装 Node.js</strong></h4><ul><li><strong>作用</strong>：提供 JavaScript 运行环境和包管理工具 <code>npm</code></li><li><strong>下载</strong>： <a href="https://nodejs.org/en/download">Node.js — Download Node.js®</a></li><li><strong>安装</strong>：默认选项完成安装</li></ul><h4 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2. 安装 Git"></a><strong>2. 安装 Git</strong></h4><ul><li><strong>作用</strong>：版本控制与部署工具</li><li><strong>下载</strong>： <a href="https://git-scm.com/">Git</a></li><li><strong>安装</strong>：全部默认选项</li></ul><h4 id="3-验证安装"><a href="#3-验证安装" class="headerlink" title="3. 验证安装"></a><strong>3. 验证安装</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v   <span class="comment"># 检查 Node.js 版本</span></span><br><span class="line">git -v     <span class="comment"># 检查 Git 版本</span></span><br></pre></td></tr></table></figure><h3 id="二、Hexo-本地部署"><a href="#二、Hexo-本地部署" class="headerlink" title="二、Hexo 本地部署"></a><strong>二、Hexo 本地部署</strong></h3><h4 id="1-安装-Hexo"><a href="#1-安装-Hexo" class="headerlink" title="1. 安装 Hexo"></a><strong>1. 安装 Hexo</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  <span class="comment"># 全局安装 Hexo 脚手架</span></span><br></pre></td></tr></table></figure><h4 id="2-初始化项目"><a href="#2-初始化项目" class="headerlink" title="2. 初始化项目"></a><strong>2. 初始化项目</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo      <span class="comment"># 创建项目文件夹</span></span><br><span class="line"><span class="built_in">cd</span> hexo         <span class="comment"># 进入目录</span></span><br><span class="line">hexo init       <span class="comment"># 初始化 Hexo</span></span><br><span class="line">npm install     <span class="comment"># 安装依赖</span></span><br></pre></td></tr></table></figure><h4 id="3-项目结构"><a href="#3-项目结构" class="headerlink" title="3. 项目结构"></a><strong>3. 项目结构</strong></h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">my-hexo-blog/</span><br><span class="line">├── source/         # 核心内容（文章/资源）</span><br><span class="line">│   ├── <span class="emphasis">_posts/     # 文章（Markdown）</span></span><br><span class="line"><span class="emphasis">│   └── images/     # 图片资源</span></span><br><span class="line"><span class="emphasis">├── themes/         # 主题文件夹（默认 landscape）</span></span><br><span class="line"><span class="emphasis">├── _</span>config.yml     # 全局配置文件（关键！）</span><br><span class="line">└── package.json    # 项目依赖配置</span><br></pre></td></tr></table></figure><h4 id="4-启动本地服务器"><a href="#4-启动本地服务器" class="headerlink" title="4. 启动本地服务器"></a><strong>4. 启动本地服务器</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server     <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:4000</code> 预览效果</p><h3 id="三、GitHub-Pages-部署（外网访问）"><a href="#三、GitHub-Pages-部署（外网访问）" class="headerlink" title="三、GitHub Pages 部署（外网访问）"></a><strong>三、GitHub Pages 部署（外网访问）</strong></h3><h4 id="1-仓库准备"><a href="#1-仓库准备" class="headerlink" title="1. 仓库准备"></a><strong>1. 仓库准备</strong></h4><ul><li><strong>源码仓库</strong>：<code>.github.io-source</code>（保存 Hexo 源码）</li><li><strong>发布仓库</strong>：<code>.github.io</code>（自动托管静态页面）</li><li>Github界面选择create new repository</li></ul><h4 id="2-推送源码到-GitHub"><a href="#2-推送源码到-GitHub" class="headerlink" title="2. 推送源码到 GitHub"></a><strong>2. 推送源码到 GitHub</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br><span class="line">git remote add origin https://github.com/&lt;username&gt;/&lt;username&gt;.github.io-source.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h4 id="3-生成-GitHub-Token"><a href="#3-生成-GitHub-Token" class="headerlink" title="3. 生成 GitHub Token"></a><strong>3. 生成 GitHub Token</strong></h4><ol><li>进入 <code>Settings &gt; Developer settings &gt; Personal Access Tokens</code></li><li>创建 Token（勾选 <code>repo</code> 权限）</li><li><strong>保存 Token</strong>（仅显示一次！）<img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20133515.png" alt="img"><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20133653.png" alt="img"></li></ol><h4 id="4-部署插件配置"><a href="#4-部署插件配置" class="headerlink" title="4. 部署插件配置"></a><strong>4. 部署插件配置</strong></h4><p>① 安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>② 修改 <code>_config.yml</code>（末尾添加）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://&lt;TOKEN&gt;@github.com/&lt;username&gt;/&lt;username&gt;.github.io.git</span>  <span class="comment"># 用真实 Token 替换 &lt;TOKEN&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><h4 id="5-部署到-GitHub-Pages"><a href="#5-部署到-GitHub-Pages" class="headerlink" title="5. 部署到 GitHub Pages"></a><strong>5. 部署到 GitHub Pages</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>访问 <code>https://.github.io</code></p><hr><h3 id="四、自动化部署（GitHub-Actions）（我感觉没啥必要）"><a href="#四、自动化部署（GitHub-Actions）（我感觉没啥必要）" class="headerlink" title="四、自动化部署（GitHub Actions）（我感觉没啥必要）"></a><strong>四、自动化部署（GitHub Actions）（我感觉没啥必要）</strong></h3><h4 id="1-创建-Workflow-文件"><a href="#1-创建-Workflow-文件" class="headerlink" title="1. 创建 Workflow 文件"></a><strong>1. 创建 Workflow 文件</strong></h4><p>路径：<code>.github/workflows/deploy.yml 根据具体情况具体修改</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Optimized</span> <span class="string">Blog</span> <span class="string">CI/CD</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">main</span>]</span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;*.json&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;**.yml&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;**/source/**&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;20&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Site</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npx hexo clean</span></span><br><span class="line"><span class="string">          npx hexo g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">.nojekyll</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">touch</span> <span class="string">public/.nojekyll</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">external_repository:</span> <span class="string">&lt;username&gt;/&lt;username&gt;.github.io</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">gh-pages</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">commit_message:</span> <span class="string">&quot;Deploy: $<span class="template-variable">&#123;&#123; github.sha &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-配置-Secrets"><a href="#2-配置-Secrets" class="headerlink" title="2. 配置 Secrets"></a><strong>2. 配置 Secrets</strong></h4><p>在 <strong>源码仓库</strong> 添加私钥：<br><code>Settings &gt; Secrets &gt; New secret</code></p><ul><li><strong>Name</strong>: DEPLOY_TOKEN#确保和文件中设置的一致</li><li><strong>Value</strong>: 粘贴token</li></ul><hr><h3 id="五、其他托管平台"><a href="#五、其他托管平台" class="headerlink" title="五、其他托管平台"></a><strong>五、其他托管平台</strong></h3><h4 id="▶-Vercel-部署"><a href="#▶-Vercel-部署" class="headerlink" title="▶ Vercel 部署"></a><strong>▶ Vercel 部署</strong></h4><ol><li>注册 <strong>Vercel</strong>（用 GitHub 账号登录）</li><li>从 GitHub 导入源码仓库</li><li>默认设置部署（自动检测 Hexo）</li><li>访问 <code>https://.vercel.app</code><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20215512.png" alt="img"><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20215739-PSdS.png" alt="img"></li></ol><h4 id="▶-Netlify-部署"><a href="#▶-Netlify-部署" class="headerlink" title="▶ Netlify 部署"></a><strong>▶ Netlify 部署</strong></h4><ol><li><p>注册 <strong>Netlify</strong></p></li><li><p>选择 <code>New site from Git &gt; GitHub</code></p></li><li><p>导入仓库并设置构建命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Build <span class="built_in">command</span>: hexo generate</span><br><span class="line">Publish directory: public</span><br></pre></td></tr></table></figure></li><li><p>访问 <code>https://.netlify.app</code><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20214709-MQrj.png" alt="img"><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20214718.png" alt="img"><img src="https://blog.jianson.xyz/upload/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-07-06%20214740.png" alt="img"></p></li></ol><hr><h3 id="六、进阶操作：更换主题"><a href="#六、进阶操作：更换主题" class="headerlink" title="六、进阶操作：更换主题"></a><strong>六、进阶操作：更换主题</strong></h3><h4 id="1-安装新主题（以-Anzhiyu-为例）"><a href="#1-安装新主题（以-Anzhiyu-为例）" class="headerlink" title="1. 安装新主题（以 Anzhiyu 为例）"></a><strong>1. 安装新主题（以 Anzhiyu 为例）</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><h4 id="2-安装渲染器"><a href="#2-安装渲染器" class="headerlink" title="2. 安装渲染器"></a><strong>2. 安装渲染器</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h4 id="3-启用主题"><a href="#3-启用主题" class="headerlink" title="3. 启用主题"></a><strong>3. 启用主题</strong></h4><p>修改 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><h4 id="4-同步配置"><a href="#4-同步配置" class="headerlink" title="4. 同步配置"></a><strong>4. 同步配置</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d  <span class="comment"># 生成并部署</span></span><br></pre></td></tr></table></figure><hr><h3 id="七、高效工作流"><a href="#七、高效工作流" class="headerlink" title="七、高效工作流"></a><strong>七、高效工作流</strong></h3><h4 id="▶-手动部署"><a href="#▶-手动部署" class="headerlink" title="▶ 手动部署"></a><strong>▶ 手动部署</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span>     <span class="comment"># 新建文章</span></span><br><span class="line">hexo clean &amp;&amp; hexo g     <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo deploy              <span class="comment"># 部署</span></span><br></pre></td></tr></table></figure><h4 id="▶-自动部署（推荐）"><a href="#▶-自动部署（推荐）" class="headerlink" title="▶ 自动部署（推荐）"></a><strong>▶ 自动部署（推荐）</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span>       <span class="comment"># 新建文章</span></span><br><span class="line">git add .                <span class="comment"># 添加所有更改</span></span><br><span class="line">git commit -m <span class="string">&quot;更新文章&quot;</span>  <span class="comment"># 提交</span></span><br><span class="line">git push origin main     <span class="comment"># 推送后自动触发 CI/CD</span></span><br></pre></td></tr></table></figure><h3 id="八、问题文档"><a href="#八、问题文档" class="headerlink" title="八、问题文档"></a><strong>八、问题文档</strong></h3><p>一·提示：无法加载文件 C:\Program Files\nodejs\npm.ps1，因为在此系统上禁止运行脚本</p><p>方法1：临时修改执行策略（推荐）</p><ol><li><strong>以管理员身份打开PowerShell</strong>（右键开始菜单 → Windows PowerShell（管理员））。</li><li>输入以下命令修改当前会话的执行策略：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned -Scope Process -Force</span><br></pre></td></tr></table></figure><ol><li>重新运行你的命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>方法2：永久修改执行策略</p><p>注意：这会永久降低安全性设置，仅当需要频繁运行脚本时使用。</p><ol><li>在管理员PowerShell中执行：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned -Force</span><br></pre></td></tr></table></figure><ol><li>确认更改后运行：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>方法3：单次绕过执行策略</p><ol><li>直接在管理员PowerShell中运行：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process powershell -ArgumentList &quot;-NoProfile -ExecutionPolicy Bypass -Command npm install -g</span><br></pre></td></tr></table></figure><p>二·在git push时</p><p>1.提示：</p><p>error: src refspec main does not match any</p><p>error: failed to push some refs to ‘<a href="https://github.com//.github.io-source.git">https://github.com//.github.io-source.git</a>‘</p><p>重命名本地分支到 <code>main</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M main</span><br></pre></td></tr></table></figure><p>推送到远程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>2.提示：fatal: unable to access ‘ <a href="https://github.com/tankseck/tankseck.github.io-source.git/">https://github.com/tankseck/tankseck.github.io-source.git/</a>‘: Recv failure: Connection was reset</p><p>网络问题，可墙解决</p>]]></content>
      
      
      <categories>
          
          <category> 知识库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
